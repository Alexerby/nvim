global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal

snippet bl "Block" bA
\begin{$1}
	$2
\end{$1}

$3
endsnippet

snippet mb "Math block" bA
\[ $1 \]
$2
endsnippet

snippet mi "Math inline" w
\( $1 \) $2
endsnippet


snippet tb "Text bold"
\textbf{$1} $2
endsnippet

snippet ti "Text italic"
\textit{$1} $2
endsnippet

snippet sec "Section" bA
\section{$1}
$2
endsnippet

snippet ssec "Section" bA
\subsection{$1}
$2
endsnippet

snippet sssec "Section" bA
\subsubsection{$1}
$2
endsnippet

snippet pf "Proof" bA 
\pf{$1}~{
	$2
}

endsnippet

snippet ex "Example" bA
\ex{$1}{
	$2
}

endsnippet

snippet qs "Question" bA
\qs{$1}{
	$2
}

endsnippet

snippet df "Definition" bA
\df{$1}{
	$2
}

endsnippet


snippet nt "Note" bA
\nt{
	$1
}

endsnippet

snippet theo "Theorem" bA
\thm{$1}{
	$2
}

endsnippet


snippet par "Paragraph" bA
\paragraph{$1}
$2
endsnippet

snippet sol "solution" bA
\sol{$1}{
	$2
}

endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet _ "subscript" iA
_{$1}
endsnippet

context "math()"
snippet ss "superscript" iA
^{$1}
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet td "superscript" iA
^{$1}$0
endsnippet


context "math()"
snippet cdot "cdot" iA
\cdot 
endsnippet

# context "math()"
# snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
# \vec{`!p snip.rv=match.group(1)`}
# endsnippet 

context "math()"
snippet pss "Proper subset" Ai
\subset 
endsnippet

context "math()"
snippet wss "Subset" Ai
\subseteq 
endsnippet

context "math()"
snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

context "math()"
snippet int "Integral" 
\int{$1} $2
endsnippet

context "math()"
snippet lim "Limit" A
\lim_{$1} $2
endsnippet

context "math()"
snippet frac "Fraction" A
\frac{$1}{$2} $3
endsnippet

context "math()"
snippet set "Set" A
\\{ $1 \\}
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

context "math()"
priority 100
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
priority 100
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet sq "Square root" A
\\sqrt{$1}
endsnippet

context "math()"
snippet bb "Blackboard Characters" iA
\mathbb{$1}
endsnippet

context "math()"
snippet bf "Bold Math Characters" iA
\mathbf{$1}
endsnippet

context "math()"
snippet mcal "Mathcal Characters" iA
\mathcal{$1} 
endsnippet

context "math()"
snippet sum "Sum" w
\sum_{${1:n=0}}^{${2:\infty}}
endsnippet

context "math()"
snippet cap  "cap" iA
\cap 
endsnippet

context "math()"
snippet cup "cup" iA
\cup 
endsnippet

context "math()"
snippet sm "setminus" iA
\setminus 
endsnippet

context "math()"
snippet ems "varnothing" iA
\varnothing 
endsnippet

context "math()"
snippet nr "new row" iA
\\\

endsnippet

context "math()"
snippet binom "Binomial" iA
\binom{$1}{$2}
endsnippet

context "math()"
snippet infty "Infinity" iA
\infty 
endsnippet

context "math()"
snippet loor "OR operator" iA
\lor 
endsnippet

context "math()"
snippet loand "AND operator" iA
\land 
endsnippet

context "math()"
snippet neq "Not equal to" iA
\neq 
endsnippet

context "math()"
snippet neg "'Not' logic operator" iA
\neg 
endsnippet

context "math()"
snippet lra "Left Right arrow" iA
\Leftrightarrow 
endsnippet


context "math()"
snippet llra "Long Left Right arrow" iA
\Longleftrightarrow 
endsnippet

context "math()"
snippet leq "Less of equal to" iA
\leq 
endsnippet

context "math()"
snippet geq "Greater or equal to" iA
\geq 
endsnippet

context "math()"
snippet imp "Implies" iA
\implies 
endsnippet

context "math()"
snippet pm "plusminus" iA
\pm 
endsnippet


context "math()"
snippet fall "for all" iA
\forall 
endsnippet


context "math()"
snippet exists "exists" iA
\exists 
endsnippet


context "math()"
snippet pref "pref" iA
\pref 
endsnippet

context "math()"
snippet spref "strict pref" iA
\strictpref 
endsnippet


context "math()"
snippet indiff "indifference" iA
\indiff 
endsnippet

context "math()"
snippet lesspref "less preferred" iA
\lesspref 
endsnippet

context "math()"
snippet part "partial derivative" iA
\partial 
endsnippet

context "math()"
snippet nabla "gradient" iA
\nabla 
endsnippet

context "math()"
snippet lagr "Lagrange" iA
\Lagr
endsnippet

context "math()"
snippet soe "Succsim (succeds or equal)" iA
\succsim 
endsnippet


context "math()"
snippet beta "beta" iA
\beta 
endsnippet

context "math()"
snippet bar "bar" iA
\bar{$1} 
endsnippet

context "math()"
snippet sin "sin" iA
\sin{($1)} 
endsnippet

context "math()"
snippet cos "cos" iA
\cos{($1)} 
endsnippet

context "math()"
snippet tan "tan" iA
\tan{$1} 
endsnippet

context "math()"
snippet ln "ln" iA
\ln{($1)} 
endsnippet

context "math()"
snippet txt "text" iA
\text{$1} 
endsnippet


context "math()"
snippet max "max" iA
\max 
endsnippet

context "math()"
snippet min "min" iA
\min
endsnippet

context "math()"
snippet "(alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Alpha|Beta|Gamma|Delta|Epsilon|Zeta|Eta|Theta|Iota|Kappa|Lambda|Mu|Nu|Xi|Omicron|Pi|Rho|Sigma|Tau|Upsilon|Phi|Chi|Psi|Omega)" "auto Greek letter" wrA
`!p
greek_map = {
    'alpha': '\\alpha',
    'beta': '\\beta',
    'gamma': '\\gamma',
    'delta': '\\delta',
    'epsilon': '\\epsilon',
    'zeta': '\\zeta',
    'eta': '\\eta',
    'theta': '\\theta',
    'iota': '\\iota',
    'kappa': '\\kappa',
    'lambda': '\\lambda',
    'mu': '\\mu',
    'nu': '\\nu',
    'xi': '\\xi',
    'omicron': '\\omicron',
    'pi': '\\pi',
    'rho': '\\rho',
    'sigma': '\\sigma',
    'tau': '\\tau',
    'upsilon': '\\upsilon',
    'phi': '\\phi',
    'chi': '\\chi',
    'psi': '\\psi',
    'omega': '\\omega',
    'Alpha': '\\Alpha',
    'Beta': '\\Beta',
    'Gamma': '\\Gamma',
    'Delta': '\\Delta',
    'Epsilon': '\\Epsilon',
    'Zeta': '\\Zeta',
    'Eta': '\\Eta',
    'Theta': '\\Theta',
    'Iota': '\\Iota',
    'Kappa': '\\Kappa',
    'Lambda': '\\Lambda',
    'Mu': '\\Mu',
    'Nu': '\\Nu',
    'Xi': '\\Xi',
    'Omicron': '\\Omicron',
    'Pi': '\\Pi',
    'Rho': '\\Rho',
    'Sigma': '\\Sigma',
    'Tau': '\\Tau',
    'Upsilon': '\\Upsilon',
    'Phi': '\\Phi',
    'Chi': '\\Chi',
    'Psi': '\\Psi',
    'Omega': '\\Omega'
}

if match.group(0) in greek_map:
    snip.rv = greek_map[match.group(0)]
else:
    snip.rv = match.group(0)
`
endsnippet



snippet articleTemplate "LaTeX Article with Template" b
\\documentclass{article}
\\usepackage{articleTemplate}

\\author{Alexander Eriksson}
\\title{$1}

\\begin{document}

\\maketitle

$2

\\end{document}
endsnippet

# snippet taylor "taylor" w
# \sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
# endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet vec "vector" iA
\vec{$1} 
endsnippet

context "math()"
snippet hat "hat" iA
\hat{$1} 
endsnippet
